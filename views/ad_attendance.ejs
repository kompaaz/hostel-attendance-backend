<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hostel Attendance</title>
    <link rel="stylesheet" href="/css/attendance.css" />
  </head>
  <body>
    <header>
      <div class="header-left">
        <img src="/img/logo.png" alt="Logo" />
        <h1>E-Attendance</h1>
      </div>
      <div id="datetime"></div>
      <!-- This will show the current date and time -->
    </header>

    <!-- Container holding all rooms and students -->
    <div id="attendance-container">
      <% Object.entries(groupedUsers).forEach(([room, students]) => { %>
      <div class="room-card">
        <div class="room-title">Room <%= room %></div>
        <!-- Room label -->
        <div class="student-list">
          <% students.forEach((student) => { %>
          <!-- Each student block -->
          <div
            class="student-card"
            data-name="<%= student.name %>"
            data-acc="<%= student.accNo %>"
          >
            <div class="student-name">
              <%= student.name %> (<%= student.dNo %>)
              <!-- Display student name and account number -->
            </div>
            <div class="status-buttons">
              <button class="status-btn present">P</button>
              <!-- Present button -->
              <button class="status-btn absent">A</button>
              <!-- Absent button -->
            </div>
          </div>
          <% }); %>
        </div>
      </div>
      <% }); %>
    </div>

    <!-- Submit button for attendance -->
    <button id="saveBtn">✅ Save Attendance</button>
    <div id="summary">Total Present: 0 | Total Absent: 0</div>
    <!-- Summary footer -->

    <script>
      const statusMap = {}; // Holds the attendance status keyed by student name

      // Keeps track of the attendance status in array format (optional)
      let attendance = [];

      // Update the attendance summary at the bottom
      function updateSummary() {
        let present = 0;
        let absent = 0;

        // Loop through each student card to count status
        document.querySelectorAll(".student-card").forEach((card) => {
          // const name = card.dataset.accNo;
          const accNo = card.dataset.acc;
          const pBtn = card.querySelector(".present");
          const aBtn = card.querySelector(".absent");

          // Check which button is active and update the map
          if (pBtn.classList.contains("active")) {
            statusMap[accNo] = "present";
            present++;
          } else if (aBtn.classList.contains("active")) {
            statusMap[accNo] = "absent";
            absent++;
          }
        });

        // Update summary text
        document.getElementById(
          "summary"
        ).textContent = `Total Present: ${present} | Total Absent: ${absent}`;
      }

      // Add event listeners to each button for every student
      document.querySelectorAll(".student-card").forEach((card) => {
        // const name = card.dataset.name;
        const accNo = card.dataset.acc;
        const pBtn = card.querySelector(".present");
        const aBtn = card.querySelector(".absent");

        // When 'Present' is clicked
        pBtn.addEventListener("click", () => {
          pBtn.classList.add("active");
          aBtn.classList.remove("active");
          statusMap[accNo] = "present";
          updateSummary(); // Recalculate totals
        });

        // When 'Absent' is clicked
        aBtn.addEventListener("click", () => {
          aBtn.classList.add("active");
          pBtn.classList.remove("active");
          statusMap[accNo] = "absent";
          updateSummary(); // Recalculate totals
        });
      });

      // On clicking Save, confirm and log the status map
      document.getElementById("saveBtn").onclick = () => {
        if (confirm("Are you sure you want to submit today's attendance?")) {
          // alert("✅ Attendance Submitted!");
          // In production, you'd POST this data to your server here
          console.log(statusMap); // Logs collected data
          // http://localhost:5000/api/attendance/mark

          const formattedRecords = Object.entries(statusMap).map(
            ([accountNumber, status]) => ({
              accountNumber,
              status,
            })
          );

          fetch("http://localhost:5000/api/attendance/mark", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ records: formattedRecords }),
          })
            .then((response) => {
              if (!response.ok) throw new Error("Failed to mark attendance");
              return response.json();
            })
            .then((data) => {
              console.log("✅ Server response:", data);
              // Optionally alert success again
              // alert("Attendance successfully recorded!");
            })
            .catch((error) => {
              console.error("❌ Error submitting attendance:", error);
              // alert("Something went wrong while submitting attendance.");
            });
        }
      };

      // Show real-time clock
      function updateTime() {
        const now = new Date();
        const timeStr = now.toLocaleString("en-IN", {
          weekday: "short",
          day: "numeric",
          month: "short",
          year: "numeric",
          hour: "numeric",
          minute: "2-digit",
          second: "2-digit",
        });
        document.getElementById("datetime").textContent = timeStr;
      }

      // Keep updating time every second
      setInterval(updateTime, 1000);
      updateTime(); // Initial call
      updateSummary(); // Initialize summary on page load
    </script>
  </body>
</html>
